

@{
    ViewData["Title"] = "Attentance List";
}

<div class="side-app main-container">

	<!-- Row -->
	<div class="row">
		<div class="col-xl-3 col-md-12 col-lg-12">
			<div class="card">

				<div class="card-body">
					<div class="countdowntimer mt-4">
						
						<span id="clocktimer2" class="border-0 style size_md" style="background: transparent; color: rgb(49, 62, 106); border-color: transparent;"></span>
						<label class="form-label">Current Time</label>
						

				
					</div>
					<div class="btn-list text-center mt-5">
						<a id="timeInId" class="btn ripple btn-primary btn-block">Check In</a>
						
					</div>
				</div>
			</div>
		</div>
		<div class="col-xl-9 col-md-12 col-lg-12">
			<div class="card">
				<div class="card-header  border-0">
					<h4 class="card-title">Days Overview This Month</h4>

					<div class="page-rightheader ms-md-auto">
						<div class="d-flex align-items-end flex-wrap my-auto end-content breadcrumb-end">

							<div class="d-lg-flex">
								<div class="btn-list">
									
									<button class="btn btn-light" data-bs-toggle="tooltip" data-bs-placement="bottom" title="E-mail"> <i class="feather feather-mail"></i> </button>
									<button class="btn btn-light" data-bs-placement="bottom" data-bs-toggle="tooltip" title="Contact"> <i class="feather feather-phone-call"></i> </button>
									<button class="btn btn-primary" data-bs-placement="bottom" data-bs-toggle="tooltip" title="Info"> <i class="feather feather-info"></i> </button>
								</div>
							</div>
						</div>
					</div>

				</div>
				<div class="card-body pt-0 pb-3">
					<div class="row mb-0 pb-0" id="AttendenceCounts">

						@foreach (var item in ViewBag.ListStatusCount)
						{
							var test = item.CssClass.Split('-')[1];
							<div class="col-md-6 col-xl-2 text-center py-5">
								<span class="avatar avatar-md bradius fs-20 bg-@test-transparent ">@item.TotalCount</span>
								<h5 class="mb-0 mt-3">@item.TitleStatus</h5>
							</div>
						}

						
					
					
					</div>
				</div>
			</div>
		</div>
	</div>
	<!-- End Row-->
	<!-- Row -->
	<div class="row">
		<div class="col-xl-12 col-md-12 col-lg-12">
			<div class="card">
				<div class="card-header  border-0">
					<h4 class="card-title">Attendance Overview</h4>

				
				</div>
				<div class="card-body">
					<div class="row">
						<div class="col-md-12 col-lg-12 col-xl-5">
							<div class="row">
								<div class="col-md-6">
									<div class="form-group">
										<label class="form-label">From:</label>
										<div class="input-group">
											<div class="input-group-prepend">
												<div class="input-group-text">
													<i class="feather feather-calendar"></i>
												</div>
											</div>

											<input id="fromdate" name="fromdate" class="form-control fc-datepicker "  type="text" >

										</div>
									</div>
								</div>
								<div class="col-md-6">
									<div class="form-group">
										<label class="form-label">To:</label>  
										<div class="input-group">
											<div class="input-group-prepend">
												<div class="input-group-text">
													<i class="feather feather-calendar"></i>
												</div>
											</div>	<input id="todate" name="todate" class="form-control fc-datepicker " type="text">
										</div>
									</div>
								</div>
							</div>
						</div>

						<div class="col-md-12 col-lg-12 col-xl-2">
							<div class="form-group mt-5">
								<button class="btn btn-primary" id="searchbtn" data-bs-placement="top" data-bs-toggle="tooltip" title="" data-bs-original-title="Info"> <i class="si si-magnifier"></i> Search </button>
								
							</div>
						</div>
					</div>
				</div>
				<div class="card-body">
					<div class="table-responsive">
						<table class="table  table-vcenter text-nowrap table-bordered border-bottom" id="emp-attendance">
							<thead>
								<tr>
									<th class="border-bottom-0">Sr.#</th>

									<th class="border-bottom-0">Date</th>
									<th class="border-bottom-0">Status</th>
									<th class="border-bottom-0">Clock-In</th>
									<th class="border-bottom-0">Clock-Out</th>
									<th class="border-bottom-0">Progress</th>
									
								</tr>
							</thead>
							<tbody>
								@*<tr>
									<td>20-01-2021</td>
									<td><span class="badge badge-success">Present</span></td>
									<td>09:35 AM</td>
									<td>06:55 PM</td>
									<td>
										<div class="progress progress-sm d-block">
											<div class="progress-bar bg-success w-100"></div>
										</div>
									</td>
									<td>09h :10 mins</td> 
								</tr>*@
								
								
							</tbody>
						</table>
					</div>
				</div>
			</div>
		</div>
	</div>
	<!-- End Row-->

</div><!-- end app-content-->
				
									

@section scripts{

    <script>


        $(document).ready(function () {

			
			CheckStatusNow();
			function updateTime() {
				var currentTime = new Date();
				var hours = currentTime.getHours();
				var minutes = currentTime.getMinutes();
				var seconds = currentTime.getSeconds();

				var ampm = "";

				// Convert hours to 12-hour format
				if (hours >= 12) {
					ampm = "PM";
					hours = hours % 12;
				} else {
					ampm = "AM";
				}
				hours = hours < 10 ? "0" + hours : hours;
        minutes = minutes < 10 ? "0" + minutes : minutes;

        // Format the time
        var formattedTime = hours + ":" + minutes + ":" + seconds;

        // Add AM/PM to the time if in 12-hour format
        if (ampm !== "") {
            formattedTime += " " + ampm;
        }

				
				$("#clocktimer2").text(formattedTime);
			}

			// Call updateTime() every second to update the time display
			setInterval(updateTime, 1000);





		  var currentDate = new Date(); // Get the current date
			var firstDayOfMonth = new Date(currentDate.getFullYear(), currentDate.getMonth(), 1);
			var lastDayOfMonth = new Date(currentDate.getFullYear(), currentDate.getMonth() + 1, 0);
			$('#fromdate').datepicker({
				dateFormat: 'dd M yy',
				autoHide: true
			
		

			});

			$('#fromdate').datepicker('setDate', firstDayOfMonth);

			$('#todate').datepicker({
               dateFormat: 'dd M yy',
				autoHide: true
				
				
			
            });
			$('#todate').datepicker('setDate', lastDayOfMonth);




            var msg = '@ViewBag.Success';
            if (msg !== "" && msg == '1') {

                notif({
                    msg: "<i class='fa fa-check fs-20 me-2'></i><b>Success:</b> You record is Inserted Succesfully.",
                    type: "success"
                });



            }
            if (msg !== "" && msg == '2') {

                notif({
                    msg: "<i class='fa fa-check fs-20 me-2'></i><b>Success:</b> You record is Updated Succesfully.",
                    type: "success"
                });



            }
            if (msg !== "" && msg == '3') {
                notif({
                    msg: "<i class='fa fa-check fs-20 me-2'></i><b>Success:</b> You record is Deleted Succesfully.",
                    type: "success"
                });

            }
            if (msg !== "" && msg == '0') {
                notif({
                    msg: "<i class='fa fa-check fs-20 me-2'></i><b>Success:</b> Error Occured.",
                    type: "error"
                });



            }
			

			$('#myTable').DataTable();


			$('#searchbtn').click(function () {
				// Code to be executed when the button is clicked
				LoadAttendance();
			});

			$('#searchbtn').click()

        });


		

		$("#timeInId").click(function () { 
			debugger;
			
			CheckAtendence();
			
			
		 });
		 
		 function CheckAtendence(){
		
			$.ajax({
				url: "/Attentance/MarkAttendenceSubmit",
				type: "POST",
				async: false,				
				success: function (response) {
					debugger
					if(response!=null)
					{
						if (response.attendanceId == 0) {
							notif({
								msg: "<i class='fa fa-info-circle fs-15 me-2'></i><b>Warning:</b> Today is Rest Day.",
								type: "warning"
							});
						}
						else
						{

							notif({
								msg: "<i class='fa fa-check fs-20 me-2'></i><b>Success:</b> " + $("#timeInId").text() + " Succesfully.",
								type: "success"
							});
							var test = $("#timeInId").text();
							if (test == "Check In") {
								$("#timeInId").text('Check Out');
							}
							else {
								$("#timeInId").text('Check In');
							}
							$('#searchbtn').click();

						}
						
					}
					


				},
				error: function (jqXHR, textStatus, errorThrown) {
					console.log(textStatus, errorThrown);
				}
			});
		}

		
		function CheckStatusNow(){
			$.ajax({
				url: "/Attentance/StatusCheckData",
				method: 'GET',
				dataType: 'json',
				success: function (response) {
					debugger
					
					if (response == null) {
						$("#timeInId").text('Check In');
					}
					else if (response.timeIn != null && response.timeOut != null && response.timeIn == null && response.timeOut == null) 
					{
						$("#timeInId").text('Check In');
					}
					
					else if (response.timeOut == null && response.timeIn != null)
					{
						$("#timeInId").text('Check Out');
					}


					
				},
				error: function (xhr, status, error) {
					
					console.error('AJAX request failed');
				}
			});
		

		}




        function LoadAttendance() {



            var obj = {

				fromdate: $("#fromdate").val(),
				todate: $("#todate").val()
              
            }
		
		
            $.ajax({
				url: "/Attentance/GetAttendanceData",
                type: "GET",
                async: false,
                data: obj,
                success: function (data) {
                 
                    if(data!=null)
                    {
						
						debugger;
					
						var table = $('#emp-attendance').DataTable();
                          table.clear();
                          table.draw();
                      
                  

							for(var i = 0; i < data.length; i++) {
                           
                            var rowData = [];


							var Totalhours = Math.floor(  parseInt(data[i]["totalDefinedMinutes"]) / 60);
							var TotalremainingMinutes = parseInt(data[i]["totalDefinedMinutes"]) % 60;

							var Emphours = Math.floor(parseInt(data[i]["totalWorkingMinutes"]) / 60);
							var EmpremainingMinutes = parseInt(data[i]["totalWorkingMinutes"]) % 60;




							var percenatge = (parseInt(data[i]["totalWorkingMinutes"]) / parseInt(data[i]["totalDefinedMinutes"])) * 100
							var statusHtml = '<td><span class="badge ' + data[i]["cssClass"] + '">' + data[i]["attendancestatus"] + '</span></td>';
							var progress = '<div class="progress progress-sm d-block"   data-toggle="tooltip" title="' + Totalhours + ':' + TotalremainingMinutes + '"   ><div class="progress-bar bg-success w-' + parseInt(percenatge) + '"   data-toggle="tooltip" title="' + Emphours + ':' + EmpremainingMinutes + '" > </div>	</div>';

							rowData.push([i + 1, data[i]["attendanceFormateDate"], statusHtml, convertTimeToAMPM(data[i]["firstPunchIn"]), convertTimeToAMPM(data[i]["lastPunchOut"]), progress]);


                          table.rows.add(rowData);
                          table.draw();

                         }

                      
                       
                    }
                  
                    
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    console.log(textStatus, errorThrown);
                }
            });

               
     
     }


		function convertTimeToAMPM(timeString) {
			if (timeString != null && timeString != '' && timeString!='NaN'){
			var time = timeString.split(':');
		
				var hours = parseInt(time[0]);
				var minutes = parseInt(time[1]);

				var ampm = hours >= 12 ? 'PM' : 'AM';
				hours = hours % 12;
				hours = hours ? hours : 12; // '0' should be converted to '12'

				var formattedTime = hours + ':' + (minutes < 10 ? '0' : '') + minutes + ' ' + ampm;
				return formattedTime;
			
			}
			else
			{
				return '';
			}

		}


		





    </script>
	}