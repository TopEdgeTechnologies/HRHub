@model HRHUBAPI.Models.Department


<input type="hidden" asp-for="CompanyId" />
<!--Add Department Modal -->
@using (@Html.BeginForm("DepartmentCreateOrUpdate", "Configuration", FormMethod.Post, new { @id = "myform", enctype = "multipart/form-data" }))
{

    <input type="hidden" asp-for="DepartmentId" />

    <div class="modal fade" id="adddepartmentmodal">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Add Department</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">×</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="form-group">
                        <label class="form-label">Department Title</label>
                        <input asp-for="Title" class="form-control" type="text" placeholder="Enter Department Title">
                    </div>
                    <div class="form-group">
                        <label class="form-label">Short Code</label>
                        <input asp-for="ShortCode" class="form-control" type="text" placeholder="Enter Short Code">
                    </div>
                    <div class="form-group">
                        <label class="form-label">Logo Attachment</label>
                        <input name="LogoAttachmentFile" accept=".jpg, .jpeg, .png" id="LogoAttachmentFile" class="form-control" type="file" placeholder="Enter Title">
                    </div>
                    <div class="form-group">

                        <img src="/Images/Avatar.png" alt="user-img" id="viewlogo" class="avatar-xxl rounded-circle mb-1">

                        <label class="custom-switch ms-5">
                            <label class="form-label me-2 mt-1">IsActive</label>
                            <input type="checkbox" asp-for="Status" class="custom-switch-input" checked="checked">
                            <span class="custom-switch-indicator custom-switch-indicator"></span>
                        </label>



                        @*<label class="custom-control custom-checkbox">
                    <input type="checkbox" asp-for="Status" type="checkbox" class="custom-control-input" checked>
                    <span class="custom-control-label">IsActive</span>
                    </label>*@

                    </div>



                </div>
                <div class="modal-footer">
                    <input type="button" value="Save" id="btnsave" onclick="postdata()" class="btn btn-primary" />
                    <a class="btn btn-danger" data-bs-dismiss="modal">Close</a>

                </div>
            </div>
        </div>
    </div>

}
<!-- End Add Department Modal  -->
<!-- Row -->
<div class="row row-sm mt-4">
    <div class="col-lg-12">
        <div class="card">
            <div class="card-header">
                <h3 class="card-title">Department Details</h3>
                @if (Convert.ToBoolean(ViewBag.IsNew))
                {
                    <div class="card-options">
                        <div class="btn-list">
                            <a onclick="addnewdepartment()" class="btn btn-primary me-3"><i class="fe fe-plus-circle me-1"></i>Add Department</a>
                            <button class="btn btn-light" data-bs-toggle="tooltip" data-bs-placement="bottom" title="" data-bs-original-title="E-mail"> <i class="feather feather-mail"></i> </button>
                            <button class="btn btn-light" data-bs-placement="bottom" data-bs-toggle="tooltip" title="" data-bs-original-title="Contact"> <i class="feather feather-phone-call"></i> </button>
                            <button class="btn btn-primary" data-bs-placement="bottom" data-bs-toggle="tooltip" title="" data-bs-original-title="Info"> <i class="feather feather-info"></i> </button>
                        </div>
                    </div>
                    @*<div class="card-options"> <a asp-action="DepartmentCreateOrUpdate" asp-controller="Configuration" class="btn btn-primary">Add New</a> </div>*@
                }
            </div>
            <div class="card-body">
                <div class="table-responsive">
                    <table class="table  card-table table-hover  table-vcenter table-sm text-nowrap" id="myTable">
                        <thead style="border-bottom: 1px solid #0000004a;">
                            <tr>
                                <th class="text-center">Sr.#</th>
                                <th class="border-bottom-0">Logo</th>
                                <th class="border-bottom-0">Title</th>
                                <th class="border-bottom-0">Short Code</th>
                                <th class="border-bottom-0">Status</th>
                                @*<th class="">Action</th>*@
                            </tr>
                        </thead>
                        <tbody>

                            @{
                                int count = 1;
                                foreach (var item in Model.Listdepartments)
                                {
                                    <tr>
                                        <td>
                                            <div class="d-flex">
                                                <span>@count</span>
                                            </div>
                                        </td>
                                        <td>
                                            <div class="d-flex">
                                                <span class="avatar avatar-md brround me-3" style="background-image: url(@item.LogoAttachment)"></span>
                                            </div>
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.Title)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.ShortCode)
                                        </td>
                                        <td>
                                            <label class="custom-switch mt-2">

                                                <input type="checkbox" name="custom-switch-checkbox1" class="custom-switch-input checkbox-IsDelete" id="IsActive_@item.DepartmentId" onchange="setvalue(this.id)" @(item.Status == true? "Checked":"") />
                                                <span class="custom-switch-indicator custom-switch-indicator"></span>
                                            </label>


                                            <div class="float-end ms-auto">
                                                <div class="btn-group ms-3 mb-0">
                                                    <a href="javascript:void(0);" class="option-dots" data-bs-toggle="dropdown" aria-haspopup="true" aria-expanded="false"><i class="fa fa-ellipsis-v"></i></a>
                                                    <div class="dropdown-menu dropdown-menu-start" style="">
                                                        @if (Convert.ToBoolean(ViewBag.IsEdit))
                                                        {
                                                            <a onclick="editrecord(@item.DepartmentId)" href="#" class="dropdown-item"><i class="fe fe-edit me-2"></i> Edit</a>

                                                        }
                                                        @if (Convert.ToBoolean(ViewBag.IsDelete))
                                                        {
                                                            <a onclick="confirmation(@item.DepartmentId)" href="#" class="dropdown-item"><i class="fe fe-trash me-2"></i> Delete</a>
                                                        }
                                                        <a class="dropdown-item" href="javascript:void(0);"><i class="fe fe-info me-2"></i> Info</a>
                                                    </div>
                                                </div>
                                            </div>

                                        </td>



                                        @*if (item.Status == true)
                                {
                                <td class="text-center"><span class="badge badge-label bg-success"><i class="mdi mdi-circle-medium"></i> Active</span></td>
                                }
                                else
                                {
                                <td class="text-center"> <span class="badge badge-label bg-danger"><i class="mdi mdi-circle-medium"></i> IsActive</span></td>

                                }*@





                                        @*if (Convert.ToBoolean(ViewBag.IsNew) == false && Convert.ToBoolean(ViewBag.IsEdit) == false && Convert.ToBoolean(ViewBag.IsDelete) == false)
                                {
                                <th class="d-none">
                                </th>
                                }
                                else
                                {
                                <td class="text-end">
                                <div class="d-flex">
                                @if (Convert.ToBoolean(ViewBag.IsEdit))
                                {
                                <a onclick="editrecord(@item.DepartmentId)" href="#" class="action-btns1 btn-xs" data-bs-placement="bottom" data-bs-toggle="tooltip" title="Edit">
                                <i class="feather feather-edit primary text-primary mt-1 "></i>
                                </a>
                                } @if (Convert.ToBoolean(ViewBag.IsDelete))
                                {
                                <a onclick="confirmation(@item.DepartmentId)" href="#" class="action-btns1 btn-xs" data-bs-toggle="tooltip" data-bs-placement="bottom" title="Delete" data-bs-original-title="Delete" aria-label="Delete">
                                <i class="feather feather-trash-2 text-danger mt-1"></i>
                                </a>
                                }
                                </div>
                                </td>
                                }*@

                                    </tr>
                                    count++;
                                }
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- End Row -->
@section scripts{

    <script>



        $(document).ready(function () {

            if (@Model.DepartmentId > 0) // for Edit Record
            {
                $("#adddepartmentmodal").modal('show');
            }

            var msg = '@ViewBag.Success';
            if (msg !== "" && msg == '1') {
                notif({
                    msg: "<i class='fa fa-check fs-20 me-2'></i><b>Success:</b> Your record is Inserted Succesfully.",
                    type: "success"
                });
            }
            if (msg !== "" && msg == '2') {
                notif({
                    msg: "<i class='fa fa-check fs-20 me-2'></i><b>Success:</b> Your record is Updated Succesfully.",
                    type: "success"
                });
            }
            if (msg !== "" && msg == '3') {
                notif({
                    msg: "<i class='fa fa-check fs-20 me-2'></i><b>Success:</b> Your record is Deleted Succesfully.",
                    type: "success"
                });
            }
            if (msg !== "" && msg == '0') {
                notif({
                    msg: "<i class='fa fa-check fs-20 me-2'></i><b>Success:</b> Error Occured.",
                    type: "error"
                });
            }

            $('#myTable').DataTable();
            $('#LogoAttachmentFile').change(function () {
                var fileInput = $(this);
                var allowedExtensions = /(\.jpg|\.jpeg|\.png)$/i;
                var fileSizeLimit = 2 * 1024 * 1024; // 2 MB
                var fileSize = this.files[0].size;
                var filePath = fileInput.val();
                if (!allowedExtensions.exec(filePath)) {
                    notif({
                        msg: "<i class='fa fa-check fs-20 me-2'></i><b>Warning:</b> Invalid file type. Please select a JPG, JPEG, or PNG file.",
                        type: "warning"
                    });
                    fileInput.val('');
                    return false;
                } else if (fileSize > fileSizeLimit) {
                    notif({
                        msg: "<i class='fa fa-check fs-20 me-2'></i><b>Warning:</b>' File size exceeds the limit of 2MB.",
                        type: "warning"
                    });
                    fileInput.val('');
                    return false;
                } else {
                    readURL(this)

                }

            });
        });


        function readURL(input) {
            if (input.files && input.files[0]) {
                var reader = new FileReader();
                reader.onload = function (e) {
                    $('#viewlogo').attr('src', e.target.result);
                }
                reader.readAsDataURL(input.files[0]);
            }
        }

        function postdata() {
            var status = true;
            debugger;
            if ($("#Title").val() == "") {
                $.growl.warning({
                    message: "Please Enter Title"
                });
                $("#Title").css("border-color", "red");
                status = false;
                return false;
            }
            else {
                $("#Title").css("border-color", "#ddd");
            }
            var Data = { id: $("#DepartmentId").val(), title: $('#Title').val() == '' ? '""' : $('#Title').val(), CompanyId: $("#CompanyId").val() }
            console.log(Data)
            $.ajax({
                async: false,
                url: "/Configuration/DepartmentAlreadyExists",
                type: "GET",
                data: Data,
                success: function (data) {
                    if (data != "") {
                        debugger
                        //var b = JSON.parse(data)
                        if (data.success) {

                            // $.growl.warning(data.message);
                            $.growl.warning({
                                message: data.message
                            });
                            status = false;
                        }
                        else {
                            $("#adddepartmentmodal").modal('hide');
                        }
                    }
                },
                error: function () {
                    status = false;
                    //   toastr.error("Please Fill Required Field");
                }
            })
            const swalWithBootstrapButtons = Swal.mixin({
                customClass: {
                    confirmButton: 'btn btn-success',
                    cancelButton: 'btn btn-danger'
                },
                buttonsStyling: false
            });
            if (status) {
                swalWithBootstrapButtons.fire({
                    title: 'Are you sure?',
                    text: "You won't be able to revert this!",
                    icon: 'warning',
                    showCancelButton: true,
                    cancelButtonText: 'No, cancel!',
                    confirmButtonText: 'Yes, Save it!',
                    timer: 30000,
                    reverseButtons: true
                }).then((result) => {
                    if (result.isConfirmed) {
                        $("#myform").submit();
                    }
                    else if (result.dismiss === Swal.DismissReason.cancel) {
                        swalWithBootstrapButtons.fire(
                            'Cancelled',
                            'Your record is safe :)',
                            'error'
                        )
                    }
                });


            }


        }


        function editrecord(id) {
            addnewdepartment();
            var Data = { id: id }
            console.log(Data)
            $.ajax({
                async: false,
                url: "/Configuration/GetDepartmentById",
                type: "GET",
                data: Data,
                success: function (data) {
                    if (data != "") {
                        debugger

                        $("#DepartmentId").val(data.departmentId);
                        $("#Title").val(data.title);
                        $("#ShortCode").val(data.shortCode);

                        $("#Status").prop('checked', data.status);
                        $("#viewlogo").attr("src", data.logoAttachment);
                        $("#adddepartmentmodal").modal('show');
                    }
                },
                error: function () {
                    status = false;
                    //   toastr.error("Please Fill Required Field");
                }
            })


        }

        function confirmation(id) {
            const swalWithBootstrapButtons = Swal.mixin({
                customClass: {
                    confirmButton: 'btn btn-success',
                    cancelButton: 'btn btn-danger'
                },
                buttonsStyling: false
            });

            swalWithBootstrapButtons.fire({
                title: 'Are you sure?',
                text: "You won't be able to revert this!",
                icon: 'warning',
                showCancelButton: true,
                cancelButtonText: 'No, cancel!',
                confirmButtonText: 'Yes, Save it!',
                timer: 30000,
                reverseButtons: true
            }).then((result) => {
                if (result.isConfirmed) {
                    var url = "@Url.Action("DepartmentDelete", "Configuration")/" + id; // replace with the desired action and controller names
                    window.location.href = url;
                }
                else if (result.dismiss === Swal.DismissReason.cancel) {
                    swalWithBootstrapButtons.fire(
                        'Cancelled',
                        'Your record is safe :)',
                        'error'
                    )
                }
            });
        }



        function addnewdepartment() {

            $("#adddepartmentmodal").modal('show');
            $("#DepartmentId").val(0)
            $("#Title").val('')
            $("#ShortCode").val('')
            $("#LogoAttachmentFile").val('')

            $("#Status").prop('checked', true);
            $("#Title").css("border-color", "#ddd");
        }

        function setvalue(event) {
            debugger
            console.log(event)
            var datasplited = event.split('_');
            var control = datasplited[0];
            var id = datasplited[1];

            if ($("#" + control + "_" + id).is(':checked')) {
                $('#IsActive_' + id).prop('checked', true);
            }
            else {
                $('#IsActive_' + id).prop('checked', false);
            }

            // UPdate Status
            var Data = { id: id, status: $("#" + control + "_" + id).is(':checked') }
            $.ajax({
                async: false,
                url: "/Configuration/UpdateDepartmentStatus",
                type: "POST",
                data: Data,
                success: function (data) {
                    if (data != "") {
                        if (data.success) {
                            // no need to redirect becoz status updated in DB

                            //var url = '@Url.Action("DepartmentList", "Configuration",new { data = 2 })';
                            //window.location.href = url;

                        }
                    }
                },
                error: function () {
                    status = false;
                    //   toastr.error("Please Fill Required Field");
                }
            })



        }


    </script>

}
