@model HRHUBAPI.Models.EmailNotificationSetting

@{
    ViewData["Title"] = "Notification Settings";
}


<div class="side-app main-container py-0">

    <!--Page header-->
    <div class="page-header mt-0 mb-2 d-xl-flex d-block">
        <div class="page-leftheader">
            <div class="page-title">Notification Settings</div>
        </div>
        <div class="page-rightheader ms-md-auto">
            <div class="d-flex align-items-end flex-wrap my-auto end-content breadcrumb-end">
                <div class="btn-list">
                    <button class="btn btn-light" data-bs-toggle="tooltip" data-bs-placement="top" title="E-mail"> <i class="feather feather-mail"></i> </button>
                    <button class="btn btn-light" data-bs-placement="top" data-bs-toggle="tooltip" title="Contact"> <i class="feather feather-phone-call"></i> </button>
                    <button class="btn btn-primary" data-bs-placement="top" data-bs-toggle="tooltip" title="Info"> <i class="feather feather-info"></i> </button>
                </div>
            </div>
        </div>
    </div>
    <!--End Page header-->
    <!-- Row -->
    <div class="row">
        <div class="col-md-12 col-xl-3">
            <div class="card">
                <div class="nav flex-column admisetting-tabs" id="settings-tab" role="tablist" aria-orientation="vertical">
                    <a class="nav-link active" data-bs-toggle="pill" href="#tab-1" role="tab">
                        <i class="fa fa-cog me-2 fs-16 "></i>General Settings
                    </a>
                    <a class="nav-link" data-bs-toggle="pill" href="#tab-2" role="tab">
                        <i class="feather feather-mail me-2 fs-16 "></i> Email Template
                    </a>
                 @*   <a class="nav-link" data-bs-toggle="pill" href="#tab-3" role="tab">
                        <i class="fa fa-list-alt me-2 fs-16 "></i> Leave Types
                    </a>*@
                </div>
            </div>
        </div>
        <div class="col-md-12 col-xl-9">
            <div class="tab-content adminsetting-content" id="setting-tabContent">
                <div class="tab-pane fade show active" id="tab-1" role="tabpanel">

                    <input type="hidden" asp-for="NotificationId" />




                    
                        <div class="card">
                        <div class="card-header mb-3" id="BorderChangeEnrollment">
                            <h3 class="card-title">Candidate Enrollment</h3>

                            <div class="card-options">

                                <label class="custom-switch">
                                    <input type="checkbox" asp-for="OnCandidateEnrollment" class="custom-switch-input">
                                    <span class="custom-switch-indicator"></span>

                                </label>
                            </div>
                        </div>
                        <div class="card-body" id="OnCandidateEnrollmentTemplate">



                            <label class="form-label">Select Email Template <span class="text-danger">*</span></label>
                                <select asp-for="OnCandidateEnrollmentTemplateId" class="form-control select2 custom-select select2-hidden-accessible" tabindex="-1" aria-hidden="true" data-placeholder="Select Template" asp-items="@(new SelectList(@Model.ListEmailTemplate ,"TemplateId" ,"Title"))">
                                </select>
                            


                        </div>
                    </div>


    
                        <div class="card">
                        <div class="card-header mb-3" id="BorderChangeStatus">
                            <h3 class="card-title">Status Change</h3>

                            <div class="card-options">

                                <label class="custom-switch">
                                    <input type="checkbox" asp-for="OnStatusChange" class="custom-switch-input">
                                    <span class="custom-switch-indicator"></span>

                                </label>
                            </div>
                        </div>
                        <div class="card-body" id="OnStatusChangeTemplate">

                             <label class="form-label">Select Email Template <span class="text-danger">*</span></label>
                                <select asp-for="OnStatusChangeTemplateId" class="form-control select2 custom-select select2-hidden-accessible" tabindex="-1" aria-hidden="true" data-placeholder="Select Template" asp-items="@(new SelectList(@Model.ListEmailTemplate ,"TemplateId" ,"Title"))">
                                </select>
                           



                        </div>
                    </div>



                    
                    
    
                        <div class="card">
                        <div class="card-header mb-3" id="BorderChangeRejection">
                            <h3 class="card-title">Rejection</h3>

                            <div class="card-options">

                                <label class="custom-switch">
                                    <input type="checkbox" asp-for="OnRejection" class="custom-switch-input">
                                    <span class="custom-switch-indicator"></span>

                                </label>
                            </div>
                        </div>
                        <div class="card-body" id="OnRejectionTemplate">

                            <label class="form-label">Select Email Template <span class="text-danger">*</span></label>
                                <select asp-for="OnRejectionTemplateId" class="form-control select2 custom-select select2-hidden-accessible" tabindex="-1" aria-hidden="true" data-placeholder="Select Template" asp-items="@(new SelectList(@Model.ListEmailTemplate ,"TemplateId" ,"Title"))">
                                </select>
                          



                        </div>
                    </div>




                        <div class="card">
                        <div class="card-header mb-3" id="BorderChangeApproved">
                            <h3 class="card-title">Approved</h3>

                            <div class="card-options">

                                <label class="custom-switch">
                                    <input type="checkbox" asp-for="OnApproved" class="custom-switch-input">
                                    <span class="custom-switch-indicator"></span>

                                </label>
                            </div>
                        </div>
                        <div class="card-body" id="OnApprovedTemplate">

                           <label class="form-label">Select Email Template <span class="text-danger">*</span></label>
                                <select asp-for="OnApprovedTemplateId" class="form-control select2 custom-select select2-hidden-accessible" tabindex="-1" aria-hidden="true" data-placeholder="Select Template" asp-items="@(new SelectList(@Model.ListEmailTemplate ,"TemplateId" ,"Title"))">
                                </select>
                           



                        </div>
                    </div>















                    <div class="card">
                        <div class="card-header mb-3" id="BorderChangeSalary">
                            <h3 class="card-title">Salary Generation</h3>

                            <div class="card-options">

                                <label class="custom-switch">
                                    <input type="checkbox" asp-for="OnSalaryGeneration" class="custom-switch-input">
                                    <span class="custom-switch-indicator"></span>

                                </label>
                            </div>
                        </div>
                        <div class="card-body" id="SalaryGenerationTemplate">

                           <label class="form-label">Select Email Template <span class="text-danger">*</span></label>
                                <select asp-for="OnSalaryGenerationTemplateId" class="form-control select2 custom-select select2-hidden-accessible" tabindex="-1" aria-hidden="true" data-placeholder="Select Template" asp-items="@(new SelectList(@Model.ListEmailTemplate ,"TemplateId" ,"Title"))">
                                </select>
                          



                        </div>
                    </div>














                <div class="card-footer">
                    <a onclick="SaveSettings()" class="btn btn-primary">Save Changes</a>
                   
                </div>
                   
                </div>
                
           
                








               
                <div class="tab-pane fade" id="tab-2" role="tabpanel">
                    
                    <div class="card">
                        <div class="card-header justify-content-between align-items-center border-0">
                            <h4 class="card-title">Email Template</h4>
                            <div>
                                <a class="btn btn-primary me-3" data-bs-toggle="modal" onclick="addnewEmail();"> <i class="fe fe-plus-circle me-1"></i> Add New</a>

                            </div>
                        </div>
                        <div class="card-body pt-2">
                            <div class="modal fade" id="addEmail">
                                <div class="modal-dialog modal-lg"  role="document">
                                    <div class="modal-content">
                                        <div class="modal-header">
                                            <h5 class="modal-title">Add Email Template</h5>
                                            <button class="btn-close" data-bs-dismiss="modal" aria-label="Close">
                                                <span aria-hidden="true">×</span>
                                            </button>
                                        </div>
                                        <div class="modal-body">
                                            <input type="hidden" id="TemplateId" />
                                           
                                          

                                                <div class="form-group">
                                                    <label class="form-label">Title: <span class="text-danger">*</span></label>
                                                    <input id="Title" name="Title" class="form-control" type="text" placeholder="Enter Email Title">
                                                </div>
                                                  <div class="form-group">
                                                    <label class="form-label">Subject: <span class="text-danger">*</span></label>
                                                    <input id="Subject" name="Subject" class="form-control" type="text" placeholder="Enter Email Subject">
                                                </div>

                                            <div class="form-group">
                                                <label class="form-label">Body:</label>
                                                <textarea id="Body" name="Body" class="summernote"></textarea>
                                            </div>


                                            <div class="form-group">


                                                <label class="custom-switch">
                                                    <label class="form-label me-2 mt-1">Status</label>
                                                    <input type="checkbox" id="Status" name="Status" class="custom-switch-input" checked="checked">
                                                    <span class="custom-switch-indicator custom-switch-indicator"></span>
                                                </label>

                                            </div>

                                        </div>
                                        
                                        <div class="modal-footer">
                                            <div class="ms-auto">
                                                <a  class="btn btn-success btn_SaveEmail">Save</a>
                                                <a href="javascript:void(0);" class="btn btn-outline-primary" data-bs-dismiss="modal">Close</a>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row row-sm">
                                <div class="col-lg-12">
                                    <div class="table-responsive">
                                        <table id="policy-table" class="table table-bordered text-nowrap border-bottom">
                                            <thead>
                                                <tr>
                                                    <th class="border-bottom-0">#</th>
                                                    <th class="border-bottom-0">Title</th>
                                                    <th class="border-bottom-0 d-none">Subject</th>
                                                    <th class="border-bottom-0 d-none">Body</th>
                                                    <th class="border-bottom-0">Status</th>
                                                    <th class="border-bottom-0">Action</th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                @{
                                                    int i = 1;
                                                    foreach (var item in Model.ListEmailTemplate)
                                                    {
                                                        <tr>
                                                            <td>@i</td>
                                                            <td>@item.Title</td>
                                                            
                                                            <td class="d-none" style="max-width: 200px; word-wrap: break-word!important; overflow: hidden;text-overflow: ellipsis;">
                                                                @Html.Raw(item.Subject)
                                                            </td>
                                                            <td class="d-none" style="max-width: 200px; word-wrap: break-word!important; overflow: hidden;text-overflow: ellipsis;">
                                                                @Html.Raw(item.Body)
                                                            </td>
                                                            <td>
                                                                <label class="custom-switch mt-2">

                                                                    <input type="checkbox" name="custom-switch-checkbox1" class="custom-switch-input" id="IsActive_@item.TemplateId" onchange="setvalue(this.id)" @(item.Status == true? "Checked":"") />
                                                                    <span class="custom-switch-indicator custom-switch-indicator"></span>
                                                                </label>
                                                            </td>
                                                            <td>


                                                                <!----- Action Buttons Code Start From Here------>
                                                                <div class="ms-auto">
                                                                    <div class="btn-group ms-3 mb-0">
                                                                        <a href="javascript:void(0);" class="option-dots" data-bs-toggle="dropdown" aria-haspopup="true" aria-expanded="false"><i class="fa fa-ellipsis-v"></i></a>
                                                                        <div class="dropdown-menu dropdown-menu-start" style="">

                                                                        @if (Convert.ToBoolean(ViewBag.IsEdit))
                                                                            {
                                                                                <a class="dropdown-item" href="#" onclick="editrecord(@item.TemplateId)" data-bs-toggle="tooltip" data-bs-placement="bottom" title="Edit" data-bs-original-title="Edit" aria-label="Edit">
                                                                                    <i class="feather feather-edit  me-2"></i> Edit

                                                                                </a>
                                                                                <a class="dropdown-item" href="#" onclick="confirmation(@item.TemplateId)" data-bs-toggle="tooltip" data-bs-placement="bottom" title="Delete" data-bs-original-title="Edit" aria-label="Delete">
                                                                                    <i class="feather feather-trash me-2"></i> Delete

                                                                            </a>


                                                                            }
                                                             




                                                                        </div>
                                                                    </div>
                                                                </div>
                                                                <!----- Action Buttons Code Ends Here------>

                                                            </td>
                                                        </tr>
                                                        i++;
                                                    }
                                                }
                                            </tbody>
                                        </table>
                                    </div>
                                </div>
                            </div>
                        </div>
                        
                    </div>
                </div>
              
            </div>

        </div>

    </div>



@section scripts{

    <script>
        $(document).ready(function () {

            ClearControl();

            // Open drop down and hide drop down

            $('#SalaryGenerationTemplate').hide();
            $('#OnRejectionTemplate').hide();
            $('#OnApprovedTemplate').hide();
            $('#OnStatusChangeTemplate').hide();
            $('#OnCandidateEnrollmentTemplate').hide();

            $('#OnCandidateEnrollment').trigger('change');
            $('#OnStatusChange').trigger('change');
            $('#OnApproved').trigger('change');
            $('#OnRejection').trigger('change');
            $('#OnSalaryGeneration').trigger('change');

                $('#OnCandidateEnrollmentTemplateId').val(@Model.OnCandidateEnrollmentTemplateId).trigger('change');


         

            //////////////////////////////////
            var msg = '@ViewBag.Success';
            if (msg !== "" && msg == '1') {

                notif({
                    msg: "<i class='fa fa-check fs-20 me-2'></i><b>Success:</b> You record is Inserted Succesfully.",
                    type: "success"
                });



            }
            if (msg !== "" && msg == '2') {

                notif({
                    msg: "<i class='fa fa-check fs-20 me-2'></i><b>Success:</b> You record is Updated Succesfully.",
                    type: "success"
                });



            }
            if (msg !== "" && msg == '3') {
                notif({
                    msg: "<i class='fa fa-check fs-20 me-2'></i><b>Success:</b> You record is Deleted Succesfully.",
                    type: "success"
                });

            }
            if (msg !== "" && msg == '0') {
                notif({
                    msg: "<i class='fa fa-check fs-20 me-2'></i><b>Success:</b> Error Occured.",
                    type: "error"
                });



            }
            $('#policy-table').DataTable();
            $('#leavetype-table').DataTable();


            //$('.custom-switch-input').prop('checked', true);


        })


            $('#OnCandidateEnrollment').change(function () {
                if ($(this).is(':checked')) {
                    debugger
                    // Checkbox is checked, show the controls
                    $("#BorderChangeEnrollment").css("border-bottom", "1px solid #3366FF");
                    if (@Model.OnCandidateEnrollmentTemplateId == 0) {
                        $('#OnCandidateEnrollmentTemplateId').select2({ placeholder: 'Select Template', width: '100%', allowClear: true }).val("").trigger('change');

                    }
                    else
                    {
                    
                    $('#OnCandidateEnrollmentTemplateId').val(@Model.OnCandidateEnrollmentTemplateId).trigger('change');
                    }

                    $('#OnCandidateEnrollmentTemplate').show(1000);
                } 
                else {
                    // Checkbox is unchecked, hide the controls
                    $('#OnCandidateEnrollmentTemplateId').select2({ placeholder: 'Select Template', width: '100%', allowClear: true }).val("").trigger('change');
                    $("#BorderChangeEnrollment").css("border-bottom", "1px solid #fdfdff");
                    
                    
                    $('#OnCandidateEnrollmentTemplate').hide(1000);
                   
                }
            });
            $('#OnStatusChange').change(function () {
                if ($(this).is(':checked')) {
                    // Checkbox is checked, show the controls
                    $("#BorderChangeStatus").css("border-bottom", "1px solid #3366FF");
                    if (@Model.OnStatusChangeTemplateId == 0 || @Model.OnStatusChangeTemplateId == null) {
                        $('#OnStatusChangeTemplateId').select2({ placeholder: 'Select Template', width: '100%', allowClear: true }).val("").trigger('change');

                    }
                    else {

                        $('#OnStatusChangeTemplateId').val(@Model.OnStatusChangeTemplateId).trigger('change');
                    }


                    
                    $('#OnStatusChangeTemplate').show(1000);
                } else {
                    // Checkbox is unchecked, hide the controls
                    $("#BorderChangeStatus").css("border-bottom", "1px solid #fdfdff");
                    $('#OnStatusChangeTemplateId').select2({ placeholder: 'Select Template', width: '100%', allowClear: true }).val("").trigger('change');

                    $('#OnStatusChangeTemplate').hide(1000);
                }
            });
            $('#OnApproved').change(function () {
                if ($(this).is(':checked')) {
                    // Checkbox is checked, show the controls
                    $("#BorderChangeApproved").css("border-bottom", "1px solid #3366FF");
                    if (@Model.OnApprovedTemplateId == 0 || @Model.OnApprovedTemplateId == null) {
                        $('#OnApprovedTemplateId').select2({ placeholder: 'Select Template', width: '100%', allowClear: true }).val("").trigger('change');

                    }
                    else {

                       $('#OnApprovedTemplateId').val(@Model.OnApprovedTemplateId).trigger('change');
                    }

                    
                    $('#OnApprovedTemplate').show(1000);
                } else {
                    // Checkbox is unchecked, hide the controls
                    $("#BorderChangeApproved").css("border-bottom", "1px solid #fdfdff");
                    $('#OnApprovedTemplateId').select2({ placeholder: 'Select Template', width: '100%', allowClear: true }).val("").trigger('change');

                    $('#OnApprovedTemplate').hide(1000);
                }
            });

            $('#OnRejection').change(function () {
                if ($(this).is(':checked')) {
                    // Checkbox is checked, show the controls
                     $("#BorderChangeRejection").css("border-bottom", "1px solid #3366FF");
                    if (@Model.OnRejectionTemplateId== 0 || @Model.OnRejectionTemplateId == null) {
                        $('#OnRejectionTemplateId').select2({ placeholder: 'Select Template', width: '100%', allowClear: true }).val("").trigger('change');

                    }
                    else {

                        $('#OnRejectionTemplateId').val(@Model.OnRejectionTemplateId).trigger('change');
                    }

                    
                    $('#OnRejectionTemplate').show(1000);
                } else {
                    // Checkbox is unchecked, hide the controls
                      $("#BorderChangeRejection").css("border-bottom", "1px solid #fdfdff");
                    $('#OnRejectionTemplateId').select2({ placeholder: 'Select Template', width: '100%', allowClear: true }).val("").trigger('change');
                    $('#OnRejectionTemplate').hide(1000);
                }
            });

            $('#OnSalaryGeneration').change(function () {
                if ($(this).is(':checked')) {
                    // Checkbox is checked, show the controls
                    $("#BorderChangeSalary").css("border-bottom", "1px solid #3366FF");
                    if (@Model.OnSalaryGenerationTemplateId== 0 || @Model.OnSalaryGenerationTemplateId == null) {
                        $('#OnSalaryGenerationTemplateId').select2({ placeholder: 'Select Template', width: '100%', allowClear: true }).val("").trigger('change');

                    }
                    else{

                    $('#OnSalaryGenerationTemplateId').val(@Model.OnSalaryGenerationTemplateId).trigger('change');
                    }

                    $('#SalaryGenerationTemplate').show(1000);
                } 
                else {
                    // Checkbox is unchecked, hide the controls
                    $("#BorderChangeSalary").css("border-bottom", "1px solid #fdfdff");
                    $('#OnSalaryGenerationTemplateId').select2({ placeholder: 'Select Template', width: '100%', allowClear: true }).val("").trigger('change');
                    $('#SalaryGenerationTemplate').hide(1000);
                }
            });

        function ClearControl(){

            $('#OnCandidateEnrollmentTemplateId').select2({ placeholder: 'Select Template', width: '100%', allowClear: true }).val("").trigger('change');
            $('#OnStatusChangeTemplateId').select2({ placeholder: 'Select Template', width: '100%', allowClear: true }).val("").trigger('change');
            $('#OnApprovedTemplateId').select2({ placeholder: 'Select Template', width: '100%', allowClear: true }).val("").trigger('change');
            $('#OnRejectionTemplateId').select2({ placeholder: 'Select Template', width: '100%', allowClear: true }).val("").trigger('change');
            $('#OnSalaryGenerationTemplateId').select2({ placeholder: 'Select Template', width: '100%', allowClear: true }).val("").trigger('change');

        }

        function SaveSettings(){

            debugger
                
                if ($("#OnCandidateEnrollment").is(':checked')) {
                    // Checkbox is checked, show the controls

                    if ($("#OnCandidateEnrollmentTemplateId").val() == '' || $("#OnCandidateEnrollmentTemplateId").val() == null) {
                        $.growl.warning({
                            message: "Select Candidate Enrollment Template !"
                        });

                        return false;
                    }


                }
                 if ($("#OnStatusChange").is(':checked')) 
                {
                        // Checkbox is checked, show the controls

                    if ($("#OnStatusChangeTemplateId").val() == '' || $("#OnStatusChangeTemplateId").val() == null) {
                            $.growl.warning({
                            message: "Select StatusChange Template !"
                            });

                            return false;
                        }


                 }
                 if ($("#OnApproved").is(':checked')) 
                 {
                        // Checkbox is checked, show the controls
                       
                    if ($("#OnApprovedTemplateId").val() == '' || $("#OnApprovedTemplateId").val() == null) {
                            $.growl.warning({
                            message: "Select Approved Template !"
                            });

                            return false;
                        }


                 }
                 if ($("#OnSalaryGeneration").is(':checked')) 
                 {
                        // Checkbox is checked, show the controls

                    if ($("#OnSalaryGenerationTemplateId").val() == '' || $("#OnSalaryGenerationTemplateId").val() == null) {
                            $.growl.warning({
                            message: "Select Salary Generation Template !"
                            });

                            return false;
                        }


                  }

                  if ($("#OnRejection").is(':checked')) 
                  {
                        // Checkbox is checked, show the controls

                    if ($("#OnRejectionTemplateId").val() == '' || $("#OnRejectionTemplateId").val() == null) {
                            $.growl.warning({
                            message: "Select Rejection Template !"
                            });

                            return false;
                        }


                  }

                



            var AttendanceByRosters   = $('#AttendanceByRosters').is(':checked');                          
            var OnCandidateEnrollment = $('#OnCandidateEnrollment').is(':checked');                  
            var OnStatusChange        = $('#OnStatusChange').is(':checked');               
            var OnApproved            = $('#OnApproved').is(':checked');                
            var OnRejection           = $('#OnRejection').is(':checked');             
            var OnSalaryGeneration    = $('#OnSalaryGeneration').is(':checked');
            var OnApprovedTemplateId    = $('#OnApprovedTemplateId').val();
            var OnRejectionTemplateId    = $('#OnRejectionTemplateId').val();
            var OnSalaryGenerationTemplateId    = $('#OnSalaryGenerationTemplateId').val();
            var OnStatusChangeTemplateId    = $('#OnStatusChangeTemplateId').val();
            var OnCandidateEnrollmentTemplateId    = $('#OnCandidateEnrollmentTemplateId').val();
           




            var Data = {
                NotificationId         : $("#NotificationId").val(),                         
                OnCandidateEnrollment:OnCandidateEnrollment,                                    
                OnStatusChange       :OnStatusChange,                                    
                OnApproved           :OnApproved,                                    
                OnRejection          :OnRejection,                                    
                OnSalaryGeneration   :OnSalaryGeneration,
                OnApprovedTemplateId :OnApprovedTemplateId,
                OnRejectionTemplateId :OnRejectionTemplateId,
                OnSalaryGenerationTemplateId :OnSalaryGenerationTemplateId,
                OnStatusChangeTemplateId :OnStatusChangeTemplateId,
                OnCandidateEnrollmentTemplateId :OnCandidateEnrollmentTemplateId,
            }

            const swalWithBootstrapButtons = Swal.mixin({
                customClass: {
                    confirmButton: 'btn btn-success',
                    cancelButton: 'btn btn-danger'
                },
                buttonsStyling: false
            });

            swalWithBootstrapButtons.fire({
                title: 'Are you sure?',
                text: "You won't be able to revert this!",
                icon: 'warning',
                showCancelButton: true,
                cancelButtonText: 'No, cancel!',
                confirmButtonText: 'Yes, Save it!',
                timer: 30000,
                reverseButtons: true
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        async: false,
                        url: "/Setting/SaveNotificationSetting",
                        type: "Post",
                        data: Data,
                        success: function (data) {
                            if (data != "") {
                                debugger
                               
                                //ClearControl();
                                // Data saved successfully
                                Swal.fire('Success', 'Data saved!', 'success');
                            }
                        },
                        error: function () {
                            status = false;
                            //   toastr.error("Please Fill Required Field");
                        }
                    })
                }
                else if (result.dismiss === Swal.DismissReason.cancel) {
                    swalWithBootstrapButtons.fire(
                        'Cancelled',
                        'Your record is safe :)',
                        'error'
                    )
                }
            });
                setTimeout(function () {

                    location.reload();

                }, 3000);

        }








        function editrecord(id) {
            
            var Data = { id: id }
            console.log(Data)
            $.ajax({
                async: false,
                url: "/Setting/EmailTemplateDetails",
                type: "GET",
                data: Data,
                success: function (data) {
                    if (data != "") {
                        debugger

                        $("#TemplateId").val(data.templateId);
                        $("#Title").val(data.title);
                        $("#Subject").val(data.subject);

                       
                        //alert(date)
                        $('#Body').summernote('code', data.body);

                        $("#Status").prop('checked', data.status);

                        $("#addEmail").modal('show');
                    }
                },
                error: function () {
                    status = false;

                }
            })


        }

        function confirmation(id) {
            
            var obj =
            {
            id:id
            }
            const swalWithBootstrapButtons = Swal.mixin({
                customClass: {
                    confirmButton: 'btn btn-success',
                    cancelButton: 'btn btn-danger'
                },
                buttonsStyling: false
            });

            swalWithBootstrapButtons.fire({
                title: 'Are you sure?',
                text: "You won't be able to revert this!",
                icon: 'warning',
                showCancelButton: true,
                cancelButtonText: 'No, cancel!',
                confirmButtonText: 'Yes, Save it!',
                timer: 30000,
                reverseButtons: true
            }).then((result) => {
                if (result.isConfirmed) {
                        $.ajax({
                            async: false,
                            url: "/Setting/TemplateDelete",                           
                            data: obj,
                            success: function (data) {
                                if (data == "") {
                                    debugger

                                    //ClearControl();
                                    // Data saved successfully
                                    Swal.fire('Success', 'Data Deleted!', 'success');
                                }
                            },
                            error: function () {
                                status = false;
                                //   toastr.error("Please Fill Required Field");
                            }
                        })
                }
                else if (result.dismiss === Swal.DismissReason.cancel) {
                    swalWithBootstrapButtons.fire(
                        'Cancelled',
                        'Your record is safe :)',
                        'error'
                    )
                }
            });
            setTimeout(function () {

                        location.reload();

                    }, 2000);
        }

        function setvalue(event) {
            debugger
            console.log(event)
            var datasplited = event.split('_');
            var control = datasplited[0];
            var id = datasplited[1];

            if ($("#" + control + "_" + id).is(':checked')) {
                $('#IsActive_' + id).prop('checked', true);
            }
            else {
                $('#IsActive_' + id).prop('checked', false);
            }

            // UPdate Status
            var Data = { id: id, status: $("#" + control + "_" + id).is(':checked') }
            $.ajax({
                async: false,
                url: "/Setting/UpdateEmailTemStatus",
                type: "POST",
                data: Data,
                success: function (data) {
                    if (data != "") {
                        if (data.success) {

                            // no need to redirect becoz status updated in DB
                            Swal.fire('Success', 'Status Update!', 'success');
                            
                            //window.location.href = url;

                        }
                    }
                },
                error: function () {
                    status = false;
                    //   toastr.error("Please Fill Required Field");
                }
            });
                //setTimeout(function () {

                //    location.reload();

                //}, 2000);



        }

        $('.btn_SaveEmail').on('click', function () {
            saveEmailTemplate();
        })
        /// Add or Edit Email Template

        function saveEmailTemplate() {
            debugger;
            var status = true;
            debugger;
            if ($("#Title").val() == "") {
                $.growl.warning({
                    message: "Please Enter Title"
                });
                $("#Title").css("border-color", "red");
                status = false;
                return false;
            } else if ($("#Subject").val() == "") {
                $.growl.warning({
                    message: "Please Enter Subject"
                });
                $("#Subject").css("border-color", "red");
                status = false;
                return false;
            } else {
                $("#Title").css("border-color", "#ddd");
                $("#Subject").css("border-color", "#ddd");
            }
            var Data = {
                TemplateId: $("#TemplateId").val(),
                Title: $('#Title').val(),
                Subject: $("#Subject").val(),
                Body: $("#Body").val(),
                Status: $("#Status").is(':checked')
            }

            $.ajax({
                async: false,
                url: "/Setting/EmailTemplateCheckData",
                type: "GET",
                data: {
                    id: $("#TemplateId").val(),
                    title: $("#Title").val()
                },
                success: function (data) {
                    if (data != "") {
                        debugger;
                        //var b = JSON.parse(data)
                        if (data.success) {
                            // $.growl.warning(data.message);
                            $.growl.warning({
                                message: data.message
                            });
                            status = false;
                        } else {
                            $("#addEmail").modal('hide');
                        }
                    }
                },
                error: function () {
                    status = false;
                    //   toastr.error("Please Fill Required Field");
                }
            });

            const swalWithBootstrapButtons = Swal.mixin({
                customClass: {
                    confirmButton: 'btn btn-success',
                    cancelButton: 'btn btn-danger'
                },
                buttonsStyling: false
            });

            if (status) {
               
                swalWithBootstrapButtons.fire({
                    title: 'Are you sure?',
                    text: "You won't be able to revert this!",
                    icon: 'warning',
                    showCancelButton: true,
                    cancelButtonText: 'No, cancel!',
                    confirmButtonText: 'Yes, Save it!',
                    timer: 30000,
                    reverseButtons: true
                }).then((result) => {
                    if (result.isConfirmed) {
                        $.ajax({
                            async: false,
                            url: "/Setting/PostEmailTemplate",
                            type: "Post",
                            data: Data,
                            success: function (data) {
                                if (data != "") {
                                    debugger;
                                    //var b = JSON.parse(data)
                                    Swal.fire('Success', 'Data saved!', 'success');


                                    $("#TemplateId").val(0)
                                    $("#Title").val('')
                                    $("#Subject").val('')
                                    $('#Body').summernote('code', '');
                                } else {
                                    $("#addEmail").modal('hide');
                                }
                            },
                            error: function () {
                                status = false;
                                //   toastr.error("Please Fill Required Field");
                            }
                        });
                    } else if (result.dismiss === Swal.DismissReason.cancel) {
                        swalWithBootstrapButtons.fire(
                            'Cancelled',
                            'Your record is safe :)',
                            'error'
                        );
                    }
                });
                    setTimeout(function () {

                        location.reload();

                    }, 2000);
            }
        }

        function addnewEmail() {

            $("#addEmail").modal('show');
            $("#TemplateId").val(0)
            $("#Title").val('')
            $("#Subject").val('')
            $('#Body').summernote('code', '');
            $("#Status").prop('checked', true);       
            $("#Title").css("border-color", "#ddd");           
           
        }

           

    </script>

					}


