@model HRHUBAPI.Models.StaffContract
@{
    ViewData["Title"] = "Contract List";
}



@using (Html.BeginForm("StaffContractCreateOrUpdate", "Staff", FormMethod.Post, new { @id = "myform", enctype = "multipart/form-data" }))
{
	<input type="hidden" asp-for="StaffContractId" />
	<input type="hidden" asp-for="Renew" />

	

	<!--Add Department Modal -->
	<div class="modal fade" id="AddGeneralModal">
		<div class="modal-dialog modal-lg" role="document">
			<div class="modal-content">
				<div class="modal-header">
					<h5 class="modal-title">Add Contract</h5>
					<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close">
						<span aria-hidden="true">×</span>
					</button>
				</div>
				<div class="modal-body">
					<div class="row">
					<div class="col-md-6">

					<div class="form-group">
						<label class="form-label">Staff Name</label>
						<select asp-for=StaffId  class="form-control custom-select select2" data-placeholder="Select Staff"  asp-items="@(new SelectList(@ViewBag.StaffList,"StaffId", "FirstName"))">
							<option label="Select Staff">Select Staff</option>
						</select>
					</div>
					</div>
				
					<div class="col-md-6">
					<div class="form-group">
						<label class="form-label">Contract Type</label>
								<select asp-for="EmploymentTypeId" class="form-control custom-select select2" data-placeholder="Select Contract Type" asp-items="@(new SelectList(@ViewBag.ContractType,"EmploymentTypeId", "Title"))">
							<option label="Select Contract Type">Select Contract Type</option>
						</select>
					</div>
					</div>
					</div>
					<div class="row">
						<div class="col-md-6">
							<div class="form-group">
								<label class="form-label">Contract Duration in Months <span class="text-danger">*</span></label>
								<select asp-for="ContractDuration" class="form-control custom-select select2" data-placeholder="Select Months">
									<option value="0">Select Month</option>
									<option value="1 Month">1 Month</option>
									<option value="2 Months">2 Months</option>
									<option value="3 Months">3 Months</option>
									<option value="Custom">Custom</option>
								</select>
							</div>
					</div>
					<div class="col-md-6">


							<div class="form-group">
								<label class="form-label">Attachment <span class="text-danger">*</span></label>
								<div class="form-group local-forms">
									<label for="form-label" class="form-label"></label> <input class="form-control" id="ContractAttachment" name="ContractAttachment" type="file" accept=".pdf, .doc, .docx,.jpg, .jpeg, .png">
								</div>
							</div>






					
					</div>
					</div>
					<div class="row">
						<div class="col-md-6">
					 <div class="form-group">
                                <label class="form-label">Start Date</label>
                                <div class="input-group">
                                    <div class="input-group-prepend">
                                        <div class="input-group-text">
                                            <i class="feather feather-calendar"></i>
                                        </div>
                                    </div><input asp-for="StartDate" class="form-control fc-datepicker" placeholder="DD-MM-YYY" type="date">
                                </div>
                            </div>
                            </div>
							<div class="col-md-6">
						<div class="form-group">
							<label class="form-label">End Date</label>
							<div class="input-group">
								<div class="input-group-prepend">
									<div class="input-group-text">
										<i class="feather feather-calendar"></i>
									</div>
								</div><input asp-for="EndDate" class="form-control fc-datepicker" placeholder="DD-MM-YYY" type="date">
							</div>
						</div>
						</div>
					</div>
					<div class="row">
						<div class="col-md-12">
							<label class="form-label">Additional Details <span class="text-danger">*</span></label>
							<div class="form-group local-forms">
								<textarea asp-for="AdditionalDetails" rows="3" class="form-control" placeholder="Additional Details"></textarea>
							</div>
						</div>
						
					</div>
					<div class="form-group">
						<label class="custom-control custom-checkbox">
							<input type="checkbox" asp-for="Status" type="checkbox" class="custom-control-input" checked>
							<span class="custom-control-label">IsActive</span>
						</label>
					</div>
				</div>
				<div class="modal-footer">
					<input type="button" value="Save" id="btnsave" onclick="SaveRecord()" class="btn btn-primary" />
					<a class="btn btn-danger" data-bs-dismiss="modal">Close</a>
				</div>
			</div>
		</div>
	</div>
	<!-- End Add Department Modal  -->
}





<div class="col-xl-12 col-md-12 col-lg-12">
	<div class="card">
		<div class="card-header border-bottom-0">
			<h4 class="card-title">Contracts Details</h4>
			@if (Convert.ToBoolean(ViewBag.IsNew))
			{
				<div class="card-options">
					<div class="btn-list">
						<a onclick="AddNewRecord()" class="btn btn-primary me-3"><i class="fe fe-plus-circle me-1"></i>Add Contract</a>
						<button class="btn btn-light" data-bs-toggle="tooltip" data-bs-placement="bottom" title="" data-bs-original-title="E-mail"> <i class="feather feather-mail"></i> </button>
						<button class="btn btn-light" data-bs-placement="bottom" data-bs-toggle="tooltip" title="" data-bs-original-title="Contact"> <i class="feather feather-phone-call"></i> </button>
						<button class="btn btn-primary" data-bs-placement="bottom" data-bs-toggle="tooltip" title="" data-bs-original-title="Info"> <i class="feather feather-info"></i> </button>
					</div>
				</div>
			}
		</div>
		<div class="tab-menu-heading table_tabs mt-2 p-0 ">
			<div class="tabs-menu1">
				<!-- Tabs -->
				<ul class="nav panel-tabs">
					<li><a href="#tab6" class="active" data-bs-toggle="tab">Expire Contracts</a></li>
					<li class="ms-sm-4"><a href="#tab5"  data-bs-toggle="tab">All Contracts</a></li>
					
				</ul>
			</div>
		</div>
		<div class="panel-body tabs-menu-body table_tabs1 p-0 border-0">
			<div class="tab-content">
				<div class="tab-pane" id="tab5">

					<div class="card-body">
						<div class="table-responsive">
							<table class="table table-bordered text-nowrap border-bottom" id="myTable">
					
							<thead>
								<tr>

										<th class="border-bottom-0">Staff Name</th>
										
										<th class="text-center">Contract Duration</th>
										<th>Start Date</th>
										<th>End Date</th>
										<th class="text-center">Status</th>
										<th class="">Action</th>
								</tr>
							</thead>
							<tbody>
									@foreach (var item in Model.AllStaffContract)
									{
										<tr>
											
											<td>
												<div class="d-flex">
													<img class="avatar avatar-md brround me-3" src="@item.StaffImg">
													<div class="me-3 mt-0 mt-sm-1 d-block">
														@{
															string fullName = item.SatffFName + " " + item.SatffLName;
														}
														<h6 class="mb-1 fs-14">@fullName</h6>
														<p class="text-muted mb-0 fs-12">@Html.DisplayFor(modelitem => item.DesigantionName)</p>

													</div>
												</div>
											</td>
											
																					
											<td class="text-center">
												<span class="badge badge-primary  side-badge">@Html.DisplayFor(modelitem => item.ContractDuration)</span>
											</td>
											<td>@item.StartDate.Value.ToString("dd-MMM-yyyy")</td>
											<td>@item.EndDate.Value.ToString("dd-MMM-yyyy")</td>
																					
											
											@{
												var isActive = item.Status;
												if (isActive == true)
												{
													<td class="text-center"> <span class="badge badge-success  side-badge">Active</span></td>
												}
												else
												{
													<td class="text-center"> <span class="badge badge-danger  side-badge">In-Active</span></td>
												}
											}
											@if (Convert.ToBoolean(ViewBag.IsNew) == false && Convert.ToBoolean(ViewBag.IsEdit) == false && Convert.ToBoolean(ViewBag.IsDelete) == false)
											{
												<th class="d-none">
												</th>
											}
											else
											{
												<td class="text-end">
													<div class="d-flex">
														@if (Convert.ToBoolean(ViewBag.IsEdit))
														{
															<a href="#" onclick="EditRecord(@item.StaffContractId,0)" class="action-btns1 btn-xs" data-bs-placement="bottom" data-bs-toggle="tooltip" title="" data-bs-original-title="Edit">
																<i class="feather feather-edit primary text-primary mt-1 "></i>
															</a>
														} @if (Convert.ToBoolean(ViewBag.IsDelete))
														{
															<a href="#" onclick="DeleteConfirmation(@item.StaffContractId)" class="action-btns1 btn-xs" data-bs-placement="bottom" data-bs-toggle="tooltip" title="" data-bs-original-title="Delete">
																<i class="feather feather-trash-2 text-danger mt-1"></i>
															</a>

															<a target="_blank" href="@Url.Content(item.Attachment)" class="action-btns1" data-bs-toggle="tooltip" data-bs-placement="bottom" title="Download Contract" data-bs-original-title="Download Contract" aria-label="Download Contract">
																<i class="feather feather-download  text-secondary mt-1"></i>
															</a>

														}
													</div>
												</td>
											}
										</tr>
									}
							</tbody>
						
						</table>
					</div>
					</div>
					
				</div>
				<div class="tab-pane active" id="tab6">
					<div class="card-body">
						<div class="table-responsive">
							<table class="table table-bordered text-nowrap border-bottom" id="ExpireContractTable">

								<thead>
									<tr>

										<th class="border-bottom-0">Staff Name</th>										
										<th class="text-center">Contract Duration</th>
										<th>Start Date</th>
										<th>End Date</th>
										<th class="text-center">Status</th>
										<th class="">Action</th>
									</tr>
								</thead>
								<tbody>
									@foreach (var item in ViewBag.ExpireContract)
									{
										<tr>

											<td>
												<div class="d-flex">
													<img class="avatar avatar-md brround me-3" src="@item.StaffImg">
													<div class="me-3 mt-0 mt-sm-1 d-block">
														@{
															string fullName = item.SatffFName + " " + item.SatffLName;
														}
														<h6 class="mb-1 fs-14">@fullName</h6>
														<p class="text-muted mb-0 fs-12">@item.DesigantionName</p>

													</div>
												</div>
											</td>


											<td class="text-center">
												<span class="badge badge-primary  side-badge">@item.ContractDuration</span>
											</td>
											<td>@item.StartDate.ToString("dd-MMM-yyyy")</td>
											<td>@item.EndDate.ToString("dd-MMM-yyyy")</td>


											@{
												var StatusExpiry = item.ExpirayStatus;
												if (StatusExpiry == "Near Expiry")
												{
													<td class="text-center"> <span class="badge badge-warning  side-badge">Near Expiry</span></td>
												}
												else
												{
													<td class="text-center"> <span class="badge badge-danger  side-badge">Expired</span></td>
												}
											}
											@if (Convert.ToBoolean(ViewBag.IsNew) == false && Convert.ToBoolean(ViewBag.IsEdit) == false && Convert.ToBoolean(ViewBag.IsDelete) == false)
											{
												<th class="d-none">
												</th>
											}
											else
											{
												<td class="text-end">
													<div class="d-flex">
														@if (Convert.ToBoolean(ViewBag.IsEdit))
														{
															<a href="#" onclick="EditRecord(@item.StaffContractId,1)" class="action-btns1 btn-xs" data-bs-placement="bottom" data-bs-toggle="tooltip" title="Re-New Contract" data-bs-original-title="Re-New Contract">
																<i class="feather feather-check text-success mt-1"></i>
															</a>

															<a target="_blank" href="@Url.Content(item.Attachment)" class="action-btns1" data-bs-toggle="tooltip" data-bs-placement="bottom" title="Download Contract" data-bs-original-title="Download Contract" aria-label="Download Contract">
																<i class="feather feather-download  text-secondary mt-1"></i>
															</a>
														} 
													</div>
												</td>
											}
										</tr>
									}
								</tbody>

							</table>
						</div>
					</div>
				</div>
				
			</div>
		</div>
	</div>
</div>





@section scripts{

	<script>


		$(document).ready(function () {


			//$("#StartDate").change(function () {
			//	var startDate = $("#StartDate").val()
			//	var currentDate = new Date(startDate);
			//	alert(currentDate)				 

			//	// Calculate the next 3 months
			//	var nextThreeMonths = new Date();
			//	nextThreeMonths.setMonth(currentDate.getMonth() + 3);

			//	// Set the datepicker value to the next 3 months
			//	var date =$("#StartDate").val(nextThreeMonths)
			//	//$("#datepicker").datepicker("setDate", nextThreeMonths);
			//	alert(date);


				
			//});

			$("#StaffId,#EmploymentTypeId,#ContractDuration").select2();


			$('#myTable,#ExpireContractTable').DataTable();

			if (@Model.StaffContractId > 0) {
				$('#AddGeneralModal').modal.show();
			}

			var msg = '@ViewBag.Success';
			if (msg !== "" && msg == '1') {
				notif({
					msg: "<i class='fa fa-check fs-20 me-2'></i><b>Success:</b> Your record is Inserted Succesfully.",
					type: "success"
				});
			}
			if (msg !== "" && msg == '2') {
				notif({
					msg: "<i class='fa fa-check fs-20 me-2'></i><b>Success:</b> Your record is Updated Succesfully.",
					type: "success"
				});
			}
			if (msg !== "" && msg == '3') {
				notif({
					msg: "<i class='fa fa-check fs-20 me-2'></i><b>Success:</b> Your record is Deleted Succesfully.",
					type: "success"
				});
			}
			if (msg !== "" && msg == '0') {
				notif({
					msg: "<i class='fa fa-check fs-20 me-2'></i><b>Success:</b> Error Occured.",
					type: "error"
				});
			}

		

		});


		function AddNewRecord() {
			debugger
			$("#AddGeneralModal").modal('show');			
			$("#StaffId").val("").trigger("change");
			$("#EmploymentTypeId").val("").trigger("change");
			$("#ContractDuration").val("").trigger("change");		
			
			$("#StartDate").val('');
			$("#EndDate").val('');
			$("#AdditionalDetails").val('');
			
			$("#Attachment").val('');
			$("#Status").prop('checked', false)
		}

		function EditRecord(id,renew) {
			AddNewRecord();
			debugger
			
			var Data = { id: id }
			console.log(Data)
			$.ajax({
				async: false,
				url: "/Staff/GetContractById",
				type: "GET",
				data: Data,
				success: function (data) {
					if (data != "") {
						debugger
						var dateTimeString = data.startDate;
						var dateTime = data.endDate;
                        var DateStart = dateTimeString.split("T")[0];
						var DateEnd = dateTime.split("T")[0];

						$("#Renew").val(renew);

						$("#StaffContractId").val(data.staffContractId);
						$("#StaffId").val(data.staffId).trigger("change");
						$("#EmploymentTypeId").val(data.employmentTypeId).trigger("change");
						$("#Title").val(data.title);
						$("#ContractDuration").val(data.contractDuration).trigger("change");
						$("#StartDate").val(DateStart)
						$("#EndDate").val(DateEnd)
						$("#AdditionalDetails").val(data.additionalDetails)
						$("#Attachment").val(data.attachment)					
						
						$("#Status").prop('checked', data.status);
						$("#AddGeneralModal").modal('show');


					}
				},
				error: function () {
					status = false;
				}
			})
		}

		function DeleteConfirmation(id) {
			const swalWithBootstrapButtons = Swal.mixin({
				customClass: {
					confirmButton: 'btn btn-success',
					cancelButton: 'btn btn-danger'
				},
				buttonsStyling: false
			});

			swalWithBootstrapButtons.fire({
				title: 'Are you sure?',
				text: "You won't be able to revert this!",
				icon: 'warning',
				showCancelButton: true,
				cancelButtonText: 'No, cancel!',
				confirmButtonText: 'Yes, Save it!',
				timer: 30000,
				reverseButtons: true
			}).then((result) => {
				if (result.isConfirmed) {
					var url = "@Url.Action("StaffContractDelete", "Staff")/" + id;

					alert(url);
					window.location.href = url;
				}
				else if (result.dismiss === Swal.DismissReason.cancel) {
					swalWithBootstrapButtons.fire(
						'Cancelled',
						'Your record is safe :)',
						'error'
					)
				}
			});
		}

		function SaveRecord() {
			var status = true;
			//$("#AddGeneralModal").modal('hide');
			debugger;


			if ($("#StaffId").val() == "") {
				$.growl.warning({
					message: "Please Select Staff Name"
				});
				$("#StaffId").css("border-color", "red");
				status = false;
				return false;
			}
			else {
				$("#StaffId").css("border-color", "#ddd");
			}

			if ($("#EmploymentTypeId").val() == "") {
				$.growl.warning({
					message: "Please Select Contract Type"
				});
				$("#EmploymentTypeId").css("border-color", "red");
				status = false;
				return false;
			}
			else {
				$("#EmploymentTypeId").css("border-color", "#ddd");
			}
			if ($("#ContractDuration").val() == "") {
				$.growl.warning({
					message: "Please Select Contract Duration"
				});
				$("#ContractDuration").css("border-color", "red");
				status = false;
				return false;
			}
			else {
				$("#ContractDuration").css("border-color", "#ddd");
			}
			
			if ($("#StartDate").val() == "") {
				$.growl.warning({
					message: "Please Select Start Date"
				});
				$("#StartDate").css("border-color", "red");
				status = false;
				return false;
			}
			else {
				$("#StartDate").css("border-color", "#ddd");
			}

			if ($("#EndDate").val() == "") {
				$.growl.warning({
					message: "Please Select End Date"
				});
				$("#EndDate").css("border-color", "red");
				status = false;
				return false;
			}
			else {
				$("#EndDate").css("border-color", "#ddd");
			}


			var Data = { id: $("#StaffContractId").val(), EndDate: $('#EndDate').val() == '' ? '""' : $('#EndDate').val(), StaffId: $("#StaffId").val() }
			console.log(Data)
			$.ajax({
				async: false,
				url: "/Staff/StaffContractAlreadyExist",
				type: "GET",
				data: Data,
				success: function (data) {
					if (data != "") {
						debugger
						///  var b = JSON.parse(data)
						if (data.success) {

							// $.growl.warning(b.message);
							$.growl.warning({
								message: data.message
							});
							status = false;
						}
						else {
							$("#AddGeneralModal").modal('hide');
						}
					}
				},
				error: function () {
					status = false;
					//   toastr.error("Please Fill Required Field");
				}
			})
			const swalWithBootstrapButtons = Swal.mixin({
				customClass: {
					confirmButton: 'btn btn-success',
					cancelButton: 'btn btn-danger'
				},
				buttonsStyling: false
			});
			if (status) {
				swalWithBootstrapButtons.fire({
					title: 'Are you sure?',
					text: "You won't be able to revert this!",
					icon: 'warning',
					showCancelButton: true,
					cancelButtonText: 'No, cancel!',
					confirmButtonText: 'Yes, Save it!',
					timer: 30000,
					reverseButtons: true
				}).then((result) => {
					if (result.isConfirmed) {
						$("#myform").submit();
					}
					else if (result.dismiss === Swal.DismissReason.cancel) {
						swalWithBootstrapButtons.fire(
							'Cancelled',
							'Your record is safe :)',
							'error'
						)
					}
				});
			}
		}




		//$('#ContractAttachment').change(function () {
  //          debugger
  //          var fileInput = $(this);
		//	var allowedExtensions = /(\.pdf|\.doc|\.docx\.jpg|\.jpeg|\.png)$/i;
  //          var fileSizeLimit = 5 * 1024 * 1024; // 2 MB
  //          var fileSize = this.files[0].size;
  //          var filePath = fileInput.val();
  //          if (!allowedExtensions.exec(filePath)) {
  //              notif({
  //                  msg: "<i class='fa fa-check fs-20 me-2'></i><b>Warning:</b> Invalid file type. Please select a Pdf, Doc, or PNG file.",
  //                  type: "warning"
  //              });
  //              fileInput.val('');
  //              return false;
  //          } else if (fileSize > fileSizeLimit) {
  //              notif({
  //                  msg: "<i class='fa fa-check fs-20 me-2'></i><b>Warning:</b>' File size exceeds the limit of 2MB.",
  //                  type: "warning"
  //              });
  //              fileInput.val('');
  //              return false;
  //          } else {
  //              readURL(this)

  //          }

  //      });
















		function AllContract() {



			var obj = {

				selectdate: $('#selectdate').val() == '' ? '""' : $('#selectdate').val(),
				Yeardatesss: $("#Yeardatesss").val()



			}




			$.ajax({
				url: "/Configuration/FilterHolidayData",
				type: "GET",
				async: false,
				data: obj,
				success: function (data) {

					if (data != null) {
						console.log(data);
						debugger;
						var table = $('#hr-holiday').DataTable();
						table.clear();
						table.draw();



						for (var i = 0; i < data.length; i++) {

							var rowData = [];
							var dateTimeString = data[i]["holidayDate"];
							var DateHoliday = dateTimeString.split("T")[0];



							var action = '';
							action += '<a class="btn btn-primary btn-icon btn-sm me-1" onclick="EditRecord(' + data[i]["holidayId"] + ')" data-bs-toggle="tooltip" data-bs-placement="top" title="" data-bs-original-title="Edit" aria-label="Edit">';
							action += '<i class="feather feather-edit"> </i> </a>';
							action += '<a onclick="confirmation(' + data[i]["holidayId"] + ')" class="btn btn-danger btn-icon btn-sm" data-bs-toggle="" data-bs-placement="top" title="" data-bs-original-title="Delete" aria-label="Delete">';
							action += '<i class="feather feather-trash-2"></i> </a>';


							rowData.push([i + 1, data[i]["dayName"], DateHoliday, data[i]["title"], action]);


							table.rows.add(rowData);
							table.draw();

						}



					}


				},
				error: function (jqXHR, textStatus, errorThrown) {
					console.log(textStatus, errorThrown);
				}
			});



		}

		function ExpireContract() {



			var obj = {

				selectdate: $('#selectdate').val() == '' ? '""' : $('#selectdate').val(),
				Yeardatesss: $("#Yeardatesss").val()



			}




			$.ajax({
				url: "/Configuration/FilterHolidayData",
				type: "GET",
				async: false,
				data: obj,
				success: function (data) {

					if (data != null) {
						console.log(data);
						debugger;
						var table = $('#hr-holiday').DataTable();
						table.clear();
						table.draw();



						for (var i = 0; i < data.length; i++) {

							var rowData = [];
							var dateTimeString = data[i]["holidayDate"];
							var DateHoliday = dateTimeString.split("T")[0];



							var action = '';
							action += '<a class="btn btn-primary btn-icon btn-sm me-1" onclick="EditRecord(' + data[i]["holidayId"] + ')" data-bs-toggle="tooltip" data-bs-placement="top" title="" data-bs-original-title="Edit" aria-label="Edit">';
							action += '<i class="feather feather-edit"> </i> </a>';
							action += '<a onclick="confirmation(' + data[i]["holidayId"] + ')" class="btn btn-danger btn-icon btn-sm" data-bs-toggle="" data-bs-placement="top" title="" data-bs-original-title="Delete" aria-label="Delete">';
							action += '<i class="feather feather-trash-2"></i> </a>';


							rowData.push([i + 1, data[i]["dayName"], DateHoliday, data[i]["title"], action]);


							table.rows.add(rowData);
							table.draw();

						}



					}


				},
				error: function (jqXHR, textStatus, errorThrown) {
					console.log(textStatus, errorThrown);
				}
			});



		}





	</script>

}
