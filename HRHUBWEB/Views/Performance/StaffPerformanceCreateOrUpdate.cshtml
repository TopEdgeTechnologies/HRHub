@model HRHUBAPI.Models.SectionAnswer
@{
    ViewData["Title"] = "Staff Performance";
    
}
<style>
    .child-center {
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .personal-info li .text {
        color: #888888;
        display: block;
        overflow: hidden;
    }

    .img-fit {
        object-fit: cover;
    }

    .border-dashed-right {
        border-right: 2px dashed #cccccc;
    }

    .border-dashed-top {
        border-top: 2px dashed #cccccc;
    }

    .arrow-ribbone-left.bg-danger:before {
        position: absolute;
        right: 0;
        top: 0;
        bottom: 0;
        content: "";
        right: -12px;
        border-top: 12px solid transparent;
        border-left: 12px solid #f7284a;
        border-bottom: 12px solid transparent;
        width: 0;
    }

    .message-feed:not(.right) .mf-content:before {
        content: "";
        position: absolute;
        top: 9px;
        border-bottom: 8px solid #128af9;
        border-left: 8px solid transparent;
        border-right: 8px solid transparent;
        right: auto;
        left: -12px;
        transform: rotate(-90deg);
        display: block;
    }

    .comment-section {
        display: flex;
        width: 100%;
        align-items: center;
        border: 2px solid #5fb2ff;
        border-radius: 45px;
        padding: 9px 9px;
        margin-bottom: 1rem;
    }

    input.comment-input {
        width: 100%;
        border: none;
        outline: none;
        padding: 7px 10px;
        font-size: 1.2rem;
    }

        input.comment-input::placeholder {
            font-size: 1.1rem
        }

    .comment-icons {
        display: flex;
    }

    .btn-icon {
        width: 3rem;
        height: 3rem;
        background-color: #e5f3ff;
        align-items: center;
        justify-content: center;
        font-size: 1.3rem;
        margin-right: 8px;
        border-radius: 50%;
        border: none;
        cursor: pointer;
    }


    a.attachement-btn {
        width: 105px;
        text-align: center;
        border: 1px solid #e5f3ff;
        padding: 2px 9px;
        border-radius: 45px;
        margin-right: 9px;
        background: #e5f3ff;
    }

    ul.timeline > li.resignation-pending:before {
        content: " ";
        background: #f7284a;
        display: inline-block;
        position: absolute;
        border-radius: 50%;
        border: 4px solid #fdedef;
        left: -2px;
        width: 20px;
        height: 20px;
        z-index: 1;
        margin: 2px;
    }

    ul.timeline > li.resignation-approved:before {
        content: " ";
        background: #0dcd94;
        display: inline-block;
        position: absolute;
        border-radius: 50%;
        border: 4px solid #fdedef;
        left: -2px;
        width: 20px;
        height: 20px;
        z-index: 1;
        margin: 2px;
    }
</style>



<div class="col-md-12 col-lg-12">
    <div class="card overflow-hidden border-bottom-1 border-secondary mb-5">
        <div class="card-header border-bottom-0">
            <h3 class="card-title">@Model.StaffList.FirstName Performance</h3>
            <div class="card-options">
                <div class="btn-list">
                    <button type="button" onclick="history.back()" class="btn btn-primary" data-bs-placement="top" data-bs-toggle="" title="" data-bs-original-title="Filter" id="btn_Filter"> <i class="fa fa-arrow-left"></i> </button>

                    <button class="btn btn-light" data-bs-toggle="tooltip" data-bs-placement="bottom" title="" data-bs-original-title="E-mail"> <i class="feather feather-mail"></i> </button>
                    <button class="btn btn-light" data-bs-placement="bottom" data-bs-toggle="tooltip" title="" data-bs-original-title="Contact"> <i class="feather feather-phone-call"></i> </button>
                    <button class="btn btn-primary" data-bs-placement="bottom" data-bs-toggle="tooltip" title="" data-bs-original-title="Info"> <i class="feather feather-info"></i> </button>
                </div>
            </div>
        </div>
        <div class="card-body p-4">
            <div class="row">
                <div class="col-md-5 border-dashed-right">
                    <div class="row">
                        <div class="col-md-5 text-center text-md-start">
                            <img src="@Model.StaffList.SnapPath" class="img-fluid img-fit rounded-circle" style="width:175px; height:175px" />
                        </div>
                        <div class="col-md-7">
                            <div class="profile-info text-center text-md-start mt-md-0">
                                <h3 class="user-name fs-22 mb-2">@Model.StaffList.FirstName</h3>
                                <h6 class="text-primary fs-18 mb-2">@Model.StaffList.DepartmentTitle</h6>
                                <small class="text-muted fs-16 mb-1">@Model.StaffList.DesignationTitle</small>
                                <div class="staff-id font-weight-bold fs-16 mb-2">Employee ID : @Model.StaffList.RegistrationNo</div>

                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-7">
                    <ul class="personal-info mt-3 pt-3 mt-md-0 px-3 px-md-0 border-2 border-secondary border-md-0">
                        <li>
                            <div class="row">
                                <div class="col-6 col-md-3">
                                    <div class="title mb-1 font-weight-bold fs-16">Phone:</div>
                                </div>
                                <div class="col-6 col-md-9">
                                    <div class="text"><span>@Model.StaffList.ContactNumber1</span></div>
                                </div>
                            </div>
                        </li>
                        <li>
                            <div class="row">
                                <div class="col-6 col-md-3">
                                    <div class="title mb-1 font-weight-bold fs-16">Email:</div>
                                </div>
                                <div class=" col-6 col-md-9">
                                    <div class="text"><span>@Model.StaffList.Email</span></div>
                                </div>
                            </div>
                        </li>
                        <li>
                            <div class="row">
                                <div class=" col-6 col-md-3">
                                    <div class="title mb-1 font-weight-bold fs-16">Address:</div>
                                </div>
                                <div class="col-6 col-md-9">
                                    <div class="text"><span>@Model.StaffList.PermanentAddress</span></div>
                                </div>
                            </div>
                        </li>
                        <li>
                            <div class="row">
                                <div class="col-6 col-md-3">
                                    <div class="title mb-1 font-weight-bold fs-16">CNIC</div>
                                </div>
                                <div class="col-6 col-md-9">
                                    <div class="text"><span>@Model.StaffList.NationalIdnumber</span></div>
                                </div>
                            </div>
                        </li>


                    </ul>
                </div>

            </div>

        </div>
    </div>

</div>


    <div class="card overflow-hidden border-bottom-1 border-secondary mb-5">
 @using (@Html.BeginForm("StaffPerformanceCreateOrUpdate", "Performance", FormMethod.Post, new { @id = "myform", enctype = "multipart/form-data" }))
    {

        <div class="card-header border-bottom-0">
        </div>
        if (Model.ReviewerStaffId != ViewBag.RevieverId)
        {
            {
                var CurrentSection = 0;

                foreach (var item in Model.ListSectionQuestion)
                {


                    if (item.SectionId != CurrentSection)
                    {
                        CurrentSection = Convert.ToInt32(item.SectionId);
                        var QuestionsList = Model.ListSectionQuestion.Where(x => x.SectionId == item.SectionId).ToList();
                        

                        <div class="card-body p-4">
                            <section class="review-section professional-excellence">

                                <div class="review-header text-center">
                                    <h3 class="review-title">@item.SectionName</h3>
                                    <p class="text-muted">@item.SectionDescription</p>
                                </div>
                                <div class="row">
                                    <div class="col-md-12">
                                        <div class="table-responsive">
                                            <table class="table table-bordered review-table mb-0" id="myTable">
                                                <thead>
                                                    <tr>
                                                        

                                                        <th>Questions</th>
                                                        <th>Weightage</th>
                                                        <th>Self Score</th>
                                                       
                                                       @* <th>Comment</th>*@

                                                    </tr>
                                                </thead>
                                                <tbody>

                                                    @{
                                                        if (item.IsAnswerWeightage == true) // it Questions Already Defined
                                                        {

                                                            foreach (var ItemQuestion in QuestionsList)
                                                            {

                                                                <tr trtype="@item.IsAnswerWeightage">
                                                                    <td>@ItemQuestion.QuestionName<input type="hidden" asp-for="SectionQuestionId" value="@ItemQuestion.SectionQuestionId" class="form-control"></td>
                                                                    <td><input asp-for="TotalQuestionWeightage" type="text" value="@ItemQuestion.Weightage" class="form-control" readonly=""></td>
                                                                    <td><input asp-for="AnswerWeightage" type="number" class="form-control number"></td>
                                                                  
                                                                    <td class="d-none"><input asp-for="ReviewedStaffId" type="hidden" class="form-control"></td>

                                                                </tr>
                                                            }
                                                        }
                                                        else  // it means its Open Question Section
                                                        {
                                                            for (int a = 0; a < item.QuestionMaxLimit; a++)
                                                            {
                                                                <tr trtype="@item.IsAnswerWeightage">
                                                                    <td><input type="text" asp-for="QuestionTitle"  class="form-control"></td>
                                                                   
                                                                </tr>
                                                                
                                                            }
                                   

                                                        }
                                                    }
                                                    





                                                   

                                                </tbody>
                                            </table>

                                        </div>
                                    </div>
                                </div>

                            </section>

                        </div>
                    }

                }

            }
        }
        else
        {
            {
                var CurrentSection = 0;

                foreach (var item in Model.ListSectionAnswer)
                {


                    if (item.SectionId != CurrentSection)
                    {
                        CurrentSection = Convert.ToInt32(item.SectionId);
                        var QuestionsList = Model.ListSectionAnswer.Where(x => x.SectionId == item.SectionId).ToList();


                        <div class="card-body p-4">
                            <section class="review-section professional-excellence">

                                <div class="review-header text-center">
                                    <h3 class="review-title">@item.SectionName</h3>
                                    <p class="text-muted">@item.SectionDescription</p>
                                </div>
                                <div class="row">
                                    <div class="col-md-12">
                                        <div class="table-responsive">
                                            <table class="table table-bordered review-table mb-0" id="myTable">
                                                <thead>
                                                    <tr>
                                                        <th>Questions</th>
                                                        <th>Weightage</th>
                                                        <th>Self Score</th>
                                                        <th>Comment</th>

                                                    </tr>
                                                </thead>
                                                <tbody>

                                                    @foreach (var ItemQuestion in QuestionsList)
                                                    {

                                                        <tr>
                                                            <td>@ItemQuestion.QuestionTitle<input type="hidden" asp-for="SectionQuestionId" value="@ItemQuestion.SectionQuestionId" class="form-control"></td>
                                                            <td><input asp-for="TotalQuestionWeightage" type="text" value="@ItemQuestion.SectionWeightage" class="form-control" readonly=""></td>
                                                            <td><input asp-for="AnswerWeightage" value="@ItemQuestion.AnswerWeightage" type="number" class="form-control number"></td>
                                                            <td><input asp-for="AnswerComments" value="@ItemQuestion.AnswerComments" type="text" class="form-control"></td>
                                                            <td><input asp-for="ReviewedStaffId" type="hidden" class="form-control"></td>
                                                            <td><input asp-for="AnswerId" value="@ItemQuestion.AnswerId" type="hidden" class="form-control"></td>

                                                        </tr>
                                                    }

                                                </tbody>
                                            </table>

                                        </div>
                                    </div>
                                </div>

                            </section>

                        </div>
                    }

                }

            }
        }

    <div class="form-group mt-3">
        <input type="button" value="Save" id="btnsave"  class="btn btn-primary" />
        <button type="button" onclick="history.back()" class="btn btn-danger"> Back</button>
    </div>
    }
    </div>


    @section Scripts{

        <script>
        $(document).ready(function () {

            $('#btnsave').click(function () {
                var status = true;

                debugger;



                if ($("#AnswerWeightage").val() == "") {
                    $.growl.warning({
                        message: "Enter Answer Weightage"
                    });
                    $("#AnswerWeightage").css("border-color", "red");
                    status = false;
                    return false;
                }
                else {
                    $("#AnswerWeightage").css("border-color", "#ddd");
                }


                const swalWithBootstrapButtons = Swal.mixin({
                    customClass: {
                        confirmButton: 'btn btn-success',
                        cancelButton: 'btn btn-danger'
                    },
                    buttonsStyling: false
                });
                if (status) {
                    swalWithBootstrapButtons.fire({
                        title: 'Are you sure?',
                        text: "You won't be able to revert this!",
                        icon: 'warning',
                        showCancelButton: true,
                        cancelButtonText: 'No, cancel!',
                        confirmButtonText: 'Yes, Save it!',
                        timer: 30000,
                        reverseButtons: true
                    }).then((result) => {
                        if (result.isConfirmed) {
                            debugger
                            var Datalist = new Array();
                            $("#myTable TBODY TR").each(function () {
                                var row = $(this);
                                var performance = {};                               
                                
                              @*  if (trType) {*@

                                    var sectionQuestionIdInput = row.find("TD").eq(0).find("input");
                                    var totalQuestionWeightageInput = row.find("TD").eq(1).find("input");
                                    var answerWeightageInput = row.find("TD").eq(2).find("input");

                                    var ReviewedStaffIdInput = row.find("TD").eq(3).find("input");




                                    var sectionQuestionIdValue = sectionQuestionIdInput.val();
                                    var totalQuestionWeightageValue = totalQuestionWeightageInput.val();

                                    var ReviewedStaffIdValue = ReviewedStaffIdInput.val();
                                    var answerWeightageValue = answerWeightageInput.val();

                                    if (sectionQuestionIdValue !== "" && !isNaN(sectionQuestionIdValue)) {
                                        performance.SectionQuestionId = parseInt(sectionQuestionIdValue);
                                    }
                                    if (totalQuestionWeightageValue !== "" && !isNaN(totalQuestionWeightageValue)) {
                                        performance.totalQuestionWeightage = parseInt(totalQuestionWeightageValue);
                                    }


                                    if (ReviewedStaffIdValue !== "" && !isNaN(ReviewedStaffIdValue)) {
                                        performance.ReviewedStaffId = parseInt(ReviewedStaffIdValue);
                                    }

                                    if (answerWeightageValue !== "" && !isNaN(answerWeightageValue)) {
                                        performance.AnswerWeightage = parseInt(answerWeightageValue);
                                    }

                              @*  }
                                else {*@
                                    var QuestionTitleInput = row.find("TD").eq(0).find("input");
                                    var QuestionTitleValue = QuestionTitleInput.val();
                                    if (QuestionTitleValue !== "" && !isNaN(QuestionTitleValue)) {
                                        performance.QuestionTitle = QuestionTitleValue;
                                    }
                             @*   }*@










        @*var AnswerIdInput = row.find("TD").eq(5).find("input");
                                var AnswerIdValue = AnswerIdInput.val();*@


        @*if (AnswerIdValue !== "" && !isNaN(AnswerIdValue)) {
                                performance.AnswerId = parseInt(AnswerIdValue);


                                }*@


                                    console.log(performance);
                                Datalist.push(performance);
                                console.log(Datalist);

                            })





                            if (Datalist.length > 0) {
                                var Data = { list: Datalist }
                                $.ajax({
                                    url: '@Url.Action("StaffPerformanceCreateOrUpdate", "Performance")',
                                    type: 'POST',
                                    data: Data,
                                    success: function (result) {
                                        // Handle the success response
                                        Swal.fire('Success', 'Data saved!', 'success');

                                    },
                                    error: function (xhr, status, error) {
                                        // Handle the error response
                                    }
                                });

                            }
                        }
                        else if (result.dismiss === Swal.DismissReason.cancel) {
                            swalWithBootstrapButtons.fire(
                                'Cancelled',
                                'Your record is safe :)',
                                'error'
                            )
                        }
                    });

                }
            });
        });
            function SaveRecord() {
           
        }




        </script>




    }

